*&---------------------------------------------------------------------*
*& Report YTESTE_0007
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT YTESTE_0007 MESSAGE-ID zmsd.
***********************************************************************
*                                                                     *
*      *********************************************************      *
*      *                +---------------------+                *      *
*      *                | Delaware Consulting |                *      *
*      *                +---------------------+                *      *
*      *********************************************************      *
*                                                                     *
***********************************************************************
*---------------------------------------------------------------------*
*** Dados do programa                                                 *
*---------------------------------------------------------------------*
* Nome  : ZRSD_PENDENCIA_FATURAMENTO                                  *
* Título: Relatório Pendência de Faturamento                          *
* Autor : Cristiane Uemura                                            *
* Data  : 30.11.2017                                                  *
*                                                                     *
* Objetivos: Relatório de Pendências de Faturamento                   *
*                                                                     *
*---------------------------------------------------------------------+
*** Histórico das modificações                                        |
*---+--------+----------------+---------------------------------------+
*Seq|Data    |Autor           |COD/ Descrição da modificação ou erro  |
*---+--------+----------------+---------------------------------------+
*001|30.11.17|Cristiane Uemura|Criação de programa                    |
*---+--------+----------------+---------------------------------------+
*001|30.11.18|Larissa Justino |Correção NFENUM                        |
*---+--------+----------------+---------------------------------------+

***TABLES***
TABLES: vbkd,
        vbak,
        vbuk,
        likp,
        vbap.

***TYPES***
TYPES: BEGIN OF ty_vbkd,
         vbeln TYPE vbkd-vbeln,
         zterm TYPE vbkd-zterm,
       END OF ty_vbkd,

       BEGIN OF ty_vbak,
         vbeln TYPE vbak-vbeln,
         erdat TYPE vbak-erdat,
         kunnr TYPE vbak-kunnr,
         knumv TYPE vbak-knumv,
         bstnk TYPE vbak-bstnk,
         bstdk TYPE vbak-bstdk,
       END OF ty_vbak,

       BEGIN OF ty_kna1,
         kunnr TYPE kna1-kunnr,
         name1 TYPE kna1-name1,
       END OF ty_kna1,

       BEGIN OF ty_vbuk,
         vbeln TYPE vbuk-vbeln,
         lvstk TYPE vbuk-lvstk,
         wbstk TYPE vbuk-wbstk,
         fkstk TYPE vbuk-fkstk,
       END OF ty_vbuk,

       BEGIN OF ty_vbfa,
         vbelv   TYPE vbfa-vbelv,
         vbeln   TYPE vbfa-vbeln,
         posnn   TYPE vbfa-posnn,
         vbtyp_n TYPE vbfa-vbtyp_n,
         refkey  TYPE j_1bnflin-refkey,
       END OF ty_vbfa,

       BEGIN OF ty_konv,
         knumv TYPE konv-knumv,
         kposn TYPE konv-kposn,
         kschl TYPE konv-kschl,
         kwert TYPE konv-kwert,
       END OF ty_konv,

       BEGIN OF ty_j_1bnflin,
         docnum TYPE j_1bnflin-docnum,
         refkey TYPE j_1bnflin-refkey,
       END OF ty_j_1bnflin,

       BEGIN OF ty_j_1bnfdoc,
         docnum TYPE j_1bnfdoc-docnum,
         nfenum TYPE j_1bnfdoc-nfenum,
         nftot  TYPE j_1bnfdoc-nftot,
         docdat TYPE j_1bnfdoc-docdat,
         zterm  TYPE j_1bnfdoc-zterm,
       END OF ty_j_1bnfdoc,

       BEGIN OF ty_alv,
         bstkd     TYPE vbkd-bstkd,
         bstdk     TYPE vbkd-bstdk,
         vbeln     TYPE vbkd-vbeln,
         werks     TYPE vbap-werks,
         erdat     TYPE vbak-erdat,
         kunnr     TYPE vbak-kunnr,
         name1     TYPE kna1-name1,
*** Inicio Alteração - Marcelo batista - projeto S/4
         val_tot   TYPE konv-kwert,
*** Fim Alteração - Marcelo Batista - projeto S/4
         vbeln_rem TYPE likp-vbeln,
         lvstk     TYPE vbuk-lvstk,
         wbstk     TYPE vbuk-wbstk,
         fkstk     TYPE vbuk-fkstk,
*** Inicio Alteração - Marcelo Batista - projeto S/4
         frete     TYPE konv-kwert,
         acres     TYPE konv-kwert,
         desco     TYPE konv-kwert,
*** Fim Alteração - Marcelo Batista - projeto S/4
         nfenum    TYPE j_1bnfdoc-nfenum,
         nftot     TYPE j_1bnfdoc-nftot,
         docdat    TYPE j_1bnfdoc-docdat,
         zterm     TYPE j_1bnfdoc-zterm,
       END OF ty_alv,

       BEGIN OF ty_konv_rem,
         vbeln TYPE vbfa-vbeln,
*** Inicio Alteração - Marcelo Batista - projeto S/4
         knumv TYPE konv-knumv,
         kschl TYPE konv-kschl,
         kwert TYPE konv-kwert,
*** Fim Alteração - Marcelo Batista - projeto S/4
       END OF ty_konv_rem.

**larissa
TYPES: BEGIN OF ty_vbap,
         vbeln TYPE vbap-vbeln,
         posnr TYPE vbap-posnr,
         werks TYPE vbap-werks,
       END OF ty_vbap.


***TABELAS INTERNAS***
DATA: tg_vbkd      TYPE TABLE OF ty_vbkd,
      tg_vbak      TYPE TABLE OF ty_vbak,
      tg_kna1      TYPE TABLE OF ty_kna1,
      tg_vbuk      TYPE TABLE OF ty_vbuk,
      tg_vbfa_rem  TYPE TABLE OF ty_vbfa,
      tg_vbfa_fat  TYPE TABLE OF ty_vbfa,
      tg_konv      TYPE TABLE OF ty_konv,
      tg_j_1bnflin TYPE TABLE OF ty_j_1bnflin,
      tg_j_1bnfdoc TYPE TABLE OF ty_j_1bnfdoc,
      tg_alv       TYPE TABLE OF ty_alv,
      tg_fieldcat  TYPE slis_t_fieldcat_alv,
      tg_konv_rem  TYPE TABLE OF ty_konv_rem,
      tg_vbap      TYPE TABLE OF ty_vbap.

***ESTRUTURAS***
DATA: eg_vbkd      TYPE ty_vbkd,
      eg_vbak      TYPE ty_vbak,
      eg_kna1      TYPE ty_kna1,
      eg_vbuk      TYPE ty_vbuk,
      eg_vbfa_rem  TYPE ty_vbfa,
      eg_vbfa_fat  TYPE ty_vbfa,
      eg_konv      TYPE ty_konv,
      eg_j_1bnflin TYPE ty_j_1bnflin,
      eg_j_1bnfdoc TYPE ty_j_1bnfdoc,
      eg_alv       TYPE ty_alv,
      eg_fieldcat  TYPE slis_fieldcat_alv,
      eg_konv_rem  TYPE ty_konv_rem,
      eg_vbap      TYPE ty_vbap.

***RANGES***
DATA: rg_auart TYPE RANGE OF vbak-auart,
      eg_auart LIKE LINE OF rg_auart.


***VARIÁVEIS***
DATA: vg_erro TYPE c.

***CONSTANTES***
CONSTANTS: c_val_tot(4) TYPE c VALUE 'IBRX',
           c_frete(4)   TYPE c VALUE 'ZF00',
           c_acresci(4) TYPE c VALUE 'ZJUR',
           c_descont(4) TYPE c VALUE 'ZTDC',
           c_auart(30)  TYPE c VALUE 'ZRSD_PENDENCIA_FATURA_AUART',
           c_aobj  TYPE xuobject   VALUE 'ZSDOA0030',
           c_actvt TYPE xufield    VALUE 'ACTVT',
           c_01    TYPE c LENGTH 2 VALUE '01',
           c_02    TYPE c LENGTH 2 VALUE '02',
           c_03    TYPE c LENGTH 2 VALUE '03',
           c_06    TYPE c LENGTH 2 VALUE '06'.

***SELECTION-SCREEN***
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.
  SELECT-OPTIONS: s_bstkd FOR vbkd-bstkd,
                  s_bstdk FOR vbkd-bstdk,
                  s_rem   FOR likp-vbeln,
                  s_vbeln FOR vbkd-vbeln,
                  s_werks FOR vbap-werks,
                  s_erdat FOR vbak-erdat,
                  s_fkstk FOR vbuk-fkstk NO INTERVALS NO-EXTENSION.
SELECTION-SCREEN END OF BLOCK b1.

*---------------------------------------------------------------------*
* START-OF-SELECTION
*---------------------------------------------------------------------*
START-OF-SELECTION.
***Modificado por Cristiane Uemura - 23/09/2022 - Início
*  PERFORM f_authority_check.  "Fabio Oliveira - Inclusão de authority checks
***Modificado por Cristiane Uemura - 23/09/2022 - Fim
  PERFORM f_valida_tela_selecao.
  CHECK vg_erro IS INITIAL.
  PERFORM f_seleciona_dados.
  CHECK vg_erro IS INITIAL.
  PERFORM f_consolida_dados.
  CHECK vg_erro IS INITIAL.
  PERFORM f_mostra_alv.

*&---------------------------------------------------------------------*
*&      Form  F_VALIDA_TELA_SELECAO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_valida_tela_selecao .

  IF s_bstkd[] IS INITIAL AND
     s_vbeln[] IS INITIAL AND
     s_erdat[] IS INITIAL.
    MESSAGE i052 DISPLAY LIKE 'E'. "Informar pelo menos Data da OV
    vg_erro = abap_true.
    LEAVE LIST-PROCESSING.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_SELECIONA_DADOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_seleciona_dados .

  DATA: tl_vbak_fae     TYPE TABLE OF ty_vbak,
        tl_vbfa_rem_fae TYPE TABLE OF ty_vbfa.

  CLEAR vg_erro.

  CALL METHOD zcl_hr_utilitarios=>tvarv_sel_opt
    EXPORTING
      im_name  = c_auart
    RECEIVING
      rt_value = rg_auart.

* Busca docs de Venda e pedidos
  SELECT vbeln
         erdat
         kunnr
         knumv
         bstnk
         bstdk
    INTO TABLE tg_vbak
    FROM vbak
    WHERE vbeln IN s_vbeln  AND
          erdat IN s_erdat  AND
          auart IN rg_auart AND
          bstnk IN s_bstkd  AND
          bstdk IN s_bstdk.

  IF sy-subrc NE 0.
    MESSAGE i048 DISPLAY LIKE 'E'. "Dados não encontrados
    vg_erro = abap_true.
    LEAVE LIST-PROCESSING.
  ELSE.
    SORT tg_vbak BY vbeln.
    SELECT vbeln posnr werks
    FROM vbap
    INTO TABLE tg_vbap
    FOR ALL ENTRIES IN tg_vbak
    WHERE vbeln = tg_vbak-vbeln.
  ENDIF.

  SELECT vbeln
         zterm
    INTO TABLE tg_vbkd
    FROM vbkd
    FOR ALL ENTRIES IN tg_vbak
    WHERE vbeln = tg_vbak-vbeln.
  IF sy-subrc = 0.
    SORT tg_vbkd BY vbeln.
  ENDIF.

  tl_vbak_fae[] = tg_vbak[].
  SORT tl_vbak_fae BY kunnr.
  DELETE ADJACENT DUPLICATES FROM tl_vbak_fae COMPARING kunnr.

  SELECT kunnr
         name1
    INTO TABLE tg_kna1
    FROM kna1
    FOR ALL ENTRIES IN tl_vbak_fae
    WHERE kunnr = tl_vbak_fae-kunnr.
  IF sy-subrc = 0.
    SORT tg_kna1 BY kunnr.
  ENDIF.

* Busca Remessas
  SELECT vbelv
         vbeln
         posnn
         vbtyp_n
    INTO TABLE tg_vbfa_rem
    FROM vbfa
    FOR ALL ENTRIES IN tg_vbak
    WHERE vbelv   = tg_vbak-vbeln AND
          vbtyp_n = 'J'
      AND vbeln IN s_rem.
  IF sy-subrc = 0.
    SORT tg_vbfa_rem BY vbelv vbeln.

    tl_vbfa_rem_fae[] = tg_vbfa_rem[].
    SORT tl_vbfa_rem_fae BY vbeln.
    DELETE ADJACENT DUPLICATES FROM tl_vbfa_rem_fae COMPARING vbeln.

* Busca status
    SELECT vbeln
           lvstk
           wbstk
           fkstk
      INTO TABLE tg_vbuk
      FROM vbuk
      FOR ALL ENTRIES IN tl_vbfa_rem_fae
      WHERE vbeln EQ tl_vbfa_rem_fae-vbeln AND
            fkstk IN s_fkstk.
    IF sy-subrc = 0.
      SORT tg_vbuk BY vbeln.
    ELSE.
      MESSAGE i048 DISPLAY LIKE 'E'. "Dados não encontrados
      vg_erro = abap_true.
      LEAVE LIST-PROCESSING.
    ENDIF.

* Busca Faturas
    SELECT vbelv
           vbeln
           posnn
           vbtyp_n
      INTO TABLE tg_vbfa_fat
      FROM vbfa
      FOR ALL ENTRIES IN tg_vbfa_rem
      WHERE vbelv   = tg_vbfa_rem-vbeln AND
            vbtyp_n = 'M'.
    IF sy-subrc = 0.
      LOOP AT tg_vbfa_fat INTO eg_vbfa_fat.
        eg_vbfa_fat-refkey = eg_vbfa_fat-vbeln.
        MODIFY tg_vbfa_fat FROM eg_vbfa_fat INDEX sy-tabix.
      ENDLOOP.

      SORT tg_vbfa_fat BY refkey.

* Busca dados da NF
      SELECT docnum
             refkey
        INTO TABLE tg_j_1bnflin
        FROM j_1bnflin
        FOR ALL ENTRIES IN tg_vbfa_fat
        WHERE refkey = tg_vbfa_fat-refkey.
      IF sy-subrc = 0.
        SORT tg_j_1bnflin BY refkey.

        SELECT docnum
               nfenum
               nftot
               docdat
               zterm
          INTO TABLE tg_j_1bnfdoc
          FROM j_1bnfdoc
          FOR ALL ENTRIES IN tg_j_1bnflin
          WHERE docnum = tg_j_1bnflin-docnum
            AND cancel EQ space.
        IF sy-subrc = 0.
          SORT tg_j_1bnfdoc BY docnum.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.

* Busca as conditions para busca dos valores
  SELECT knumv
         kposn
         kschl
         kwert
    INTO TABLE tg_konv
    FROM konv
    FOR ALL ENTRIES IN tg_vbak
    WHERE knumv = tg_vbak-knumv.
  IF sy-subrc = 0.
    SORT tg_konv BY knumv kposn.
    LOOP AT tg_vbak INTO eg_vbak.

      READ TABLE tg_vbfa_rem INTO eg_vbfa_rem WITH KEY vbelv = eg_vbak-vbeln
                                                              BINARY SEARCH.
      IF sy-subrc = 0.
        LOOP AT tg_vbfa_rem INTO eg_vbfa_rem FROM sy-tabix.
          IF eg_vbfa_rem-vbelv NE eg_vbak-vbeln.
            EXIT.
          ENDIF.
          READ TABLE tg_konv INTO eg_konv WITH KEY knumv = eg_vbak-knumv
                                                   kposn = eg_vbfa_rem-posnn
                                                            BINARY SEARCH.
          IF sy-subrc = 0.
            LOOP AT tg_konv INTO eg_konv FROM sy-tabix.
              IF eg_konv-knumv NE eg_vbak-knumv OR
                 eg_konv-kposn NE eg_vbfa_rem-posnn.
                EXIT.
              ENDIF.
              eg_konv_rem-vbeln = eg_vbfa_rem-vbeln.
              eg_konv_rem-knumv = eg_vbak-knumv.
              eg_konv_rem-kschl = eg_konv-kschl.
              eg_konv_rem-kwert = eg_konv-kwert.
              COLLECT eg_konv_rem INTO tg_konv_rem.
              CLEAR eg_konv_rem.
            ENDLOOP.
          ENDIF.
        ENDLOOP.
      ENDIF.
    ENDLOOP.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_CONSOLIDA_DADOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_consolida_dados .

**Inicio alteração Blend 30/11/2018
  SORT tg_vbfa_fat BY vbelv.
**Final alteração Blend 30/11/2018
  SORT tg_konv_rem BY vbeln kschl.
  SORT tg_vbfa_rem BY vbelv vbeln.
  DELETE ADJACENT DUPLICATES FROM tg_vbfa_rem COMPARING vbelv vbeln.

  LOOP AT tg_vbak INTO eg_vbak.

    READ TABLE tg_vbap INTO eg_vbap WITH KEY vbeln = eg_vbak-vbeln
    BINARY SEARCH.
    IF sy-subrc = 0.
      IF NOT eg_vbap-werks IN s_werks.
        CONTINUE.
      ENDIF.
    ENDIF.

    CLEAR: eg_vbuk, eg_kna1, eg_vbfa_rem, eg_vbfa_fat,
           eg_j_1bnflin, eg_j_1bnfdoc, eg_vbkd.

    READ TABLE tg_vbkd INTO eg_vbkd WITH KEY vbeln =  eg_vbak-vbeln
                                                      BINARY SEARCH.

    READ TABLE tg_kna1 INTO eg_kna1 WITH KEY kunnr = eg_vbak-kunnr
                                                      BINARY SEARCH.

    READ TABLE tg_vbfa_rem INTO eg_vbfa_rem WITH KEY vbelv = eg_vbak-vbeln
                                                            BINARY SEARCH.
    IF sy-subrc = 0.
      LOOP AT tg_vbfa_rem INTO eg_vbfa_rem FROM sy-tabix.
        IF eg_vbfa_rem-vbelv NE eg_vbak-vbeln.
          EXIT.
        ENDIF.
        CLEAR: eg_vbuk, eg_vbfa_fat, eg_j_1bnflin, eg_j_1bnfdoc.
        READ TABLE tg_vbuk INTO eg_vbuk WITH KEY vbeln = eg_vbfa_rem-vbeln
                                                        BINARY SEARCH.
        IF sy-subrc NE 0.
          CONTINUE.
        ENDIF.

        READ TABLE tg_vbfa_fat INTO eg_vbfa_fat WITH KEY vbelv = eg_vbfa_rem-vbeln
                                                                     BINARY SEARCH.
        IF sy-subrc = 0.
          READ TABLE tg_j_1bnflin INTO eg_j_1bnflin WITH KEY refkey = eg_vbfa_fat-refkey
                                                                        BINARY SEARCH.
          IF sy-subrc = 0.
            READ TABLE tg_j_1bnfdoc INTO eg_j_1bnfdoc WITH KEY docnum = eg_j_1bnflin-docnum
                                                                              BINARY SEARCH.
          ENDIF.
        ENDIF.

        eg_alv-bstkd     = eg_vbak-bstnk.
        eg_alv-bstdk     = eg_vbak-bstdk.
        eg_alv-vbeln     = eg_vbak-vbeln.
        eg_alv-werks     = eg_vbap-werks.
        eg_alv-erdat     = eg_vbak-erdat.
        eg_alv-kunnr     = eg_vbak-kunnr.
        eg_alv-name1     = eg_kna1-name1.
        eg_alv-vbeln_rem = eg_vbfa_rem-vbeln.
        eg_alv-lvstk     = eg_vbuk-lvstk.
        eg_alv-wbstk     = eg_vbuk-wbstk.
        eg_alv-fkstk     = eg_vbuk-fkstk.
        eg_alv-nfenum    = eg_j_1bnfdoc-nfenum.
        eg_alv-nftot     = eg_j_1bnfdoc-nftot.
        eg_alv-docdat    = eg_j_1bnfdoc-docdat.
        eg_alv-zterm     = eg_vbkd-zterm.

        READ TABLE tg_konv_rem INTO eg_konv_rem WITH KEY vbeln = eg_vbfa_rem-vbeln
                                                         kschl = c_val_tot.
        IF sy-subrc = 0.
          eg_alv-val_tot   = eg_konv_rem-kwert.
        ENDIF.

        READ TABLE tg_konv_rem INTO eg_konv_rem WITH KEY vbeln = eg_vbfa_rem-vbeln
                                                         kschl = c_frete.
        IF sy-subrc = 0.
          eg_alv-frete     = eg_konv_rem-kwert.
        ENDIF.

        READ TABLE tg_konv_rem INTO eg_konv_rem WITH KEY vbeln = eg_vbfa_rem-vbeln
                                                         kschl = c_acresci.
        IF sy-subrc = 0.
          eg_alv-acres     = eg_konv_rem-kwert.
        ENDIF.

        READ TABLE tg_konv_rem INTO eg_konv_rem WITH KEY vbeln = eg_vbfa_rem-vbeln
                                                         kschl = c_descont.
        IF sy-subrc = 0.
          eg_alv-desco     = eg_konv_rem-kwert.
        ENDIF.

        APPEND eg_alv TO tg_alv.
        CLEAR eg_alv.
      ENDLOOP.
    ENDIF.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_MOSTRA_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_mostra_alv .

  DATA: el_layout TYPE slis_layout_alv.

  IF tg_alv[] IS INITIAL.
    MESSAGE i048 DISPLAY LIKE 'E'. "Dados não encontrados
    vg_erro = abap_true.
    LEAVE LIST-PROCESSING.
  ENDIF.

  PERFORM f_fieldcat.

* Layout
  CLEAR el_layout.
  el_layout-colwidth_optimize = abap_true.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program      = sy-cprog
      i_callback_user_command = 'F_USER_COMMAND'
      is_layout               = el_layout
      it_fieldcat             = tg_fieldcat
    TABLES
      t_outtab                = tg_alv
    EXCEPTIONS
      program_error           = 1
      OTHERS                  = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    LEAVE LIST-PROCESSING.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_fieldcat .

  REFRESH tg_fieldcat.

*>>> Dados do fieldcat
* 1 - Nome do campo
* 2 - Nome da tabela
* 3 - Título da coluna
* 4 - Campo de referência
* 5 - Tabela de referência
  PERFORM f_monta_fieldcat USING:
*     1                  2            3
  'BSTKD'              'TG_ALV'     TEXT-002 '' '',
  'BSTDK'              'TG_ALV'     TEXT-003 '' '',
  'VBELN'              'TG_ALV'     TEXT-004 '' '',
  'WERKS'              'TG_ALV'     TEXT-020 '' '',
  'ERDAT'              'TG_ALV'     TEXT-005 '' '',
  'KUNNR'              'TG_ALV'     TEXT-006 '' '',
  'NAME1'              'TG_ALV'     TEXT-007 '' '',
  'VAL_TOT'            'TG_ALV'     TEXT-008 '' '',
  'VBELN_REM'          'TG_ALV'     TEXT-009 '' '',
  'LVSTK'              'TG_ALV'     TEXT-010 '' '',
  'WBSTK'              'TG_ALV'     TEXT-011 '' '',
  'FKSTK'              'TG_ALV'     TEXT-012 '' '',
  'FRETE'              'TG_ALV'     TEXT-013 '' '',
  'ACRES'              'TG_ALV'     TEXT-014 '' '',
  'DESCO'              'TG_ALV'     TEXT-015 '' '',
  'NFENUM'             'TG_ALV'     TEXT-016 '' '',
  'NFTOT'              'TG_ALV'     TEXT-017 '' '',
  'DOCDAT'             'TG_ALV'     TEXT-018 '' '',
  'ZTERM'              'TG_ALV'     TEXT-019 '' ''.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  F_MONTA_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_monta_fieldcat USING     p_campo
                                p_tab_name
                                p_titulo
                                p_reffield
                                p_reftable.
  CLEAR: eg_fieldcat.

  eg_fieldcat-fieldname      = p_campo.
  eg_fieldcat-tabname        = p_tab_name.
  eg_fieldcat-seltext_l      = p_titulo.
  eg_fieldcat-ref_fieldname  = p_reffield.
  eg_fieldcat-ref_tabname   = p_reftable.
  APPEND eg_fieldcat TO tg_fieldcat.
  CLEAR eg_fieldcat.

ENDFORM. " F_MONTA_FIELDCAT


FORM f_user_command USING p_ucomm LIKE sy-ucomm p_selfield TYPE kkblo_selfield.

  CHECK p_ucomm = '&IC1'.

  CASE p_selfield-fieldname.
    WHEN 'VBELN'.
      SET PARAMETER ID 'AUN' FIELD p_selfield-value.
      CALL TRANSACTION 'VA03' AND SKIP FIRST SCREEN.
    WHEN 'VBELN_REM'.
      SET PARAMETER ID 'VL' FIELD p_selfield-value.
      CALL TRANSACTION 'VL03N' AND SKIP FIRST SCREEN.
    WHEN OTHERS.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form f_authority_check
*&---------------------------------------------------------------------*
FORM f_authority_check .

  CALL METHOD zcl_authority_check=>authority_check
    EXPORTING
      i_objct  = c_aobj
      i_id1    = c_actvt
      i_field1 = c_01
      i_id2    = c_actvt
      i_field2 = c_02
      i_id3    = c_actvt
      i_field3 = c_03
      i_id4    = c_actvt
      i_field4 = c_06.

ENDFORM.