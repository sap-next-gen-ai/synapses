************************************************************************
*                       Complex Consultoria                            *
*                                                                      *
* Nome do Programa   : ZFI_RELATORIO_FATURAMENTO                       *
* Transação          : ZSD006                                          *
* Módulo funcional   : SD                                              *
* Título do Programa : Relatório de Faturamento                        *
* Programador        : Paulo Barrios                                   *
* Data de criação    : 28.11.2014                                      *
************************************************************************
* Objetivo: O relatório visa o faturamento geral por empresa e dos     *
*           seus impostos.                                             *
*----------------------------------------------------------------------*
* Lista de Modificações:                                               *
* Data     |   Autor     |  Request #  |Breve descrição                *
* ---------------------------------------------------------------------*
*28.11.2014| P. Barrios  | DEVK904527  | Desenvolvimento Inicial       *
*09.04.2015| P. Barrios  | DEVK915301  | Inc. Desc. Abs. e Base Líquida*
************************************************************************
REPORT zsd_relatorio_faturamento MESSAGE-ID sd.

************************************************************************
*** Tabelas                                                          ***
************************************************************************
TABLES: vbrp, j_1bnfdoc, mara.

************************************************************************
*** Parâmetros de Seleção                                            ***
************************************************************************
SELECTION-SCREEN BEGIN OF BLOCK b0 WITH FRAME TITLE text-t00.
SELECT-OPTIONS: s_aubel   FOR vbrp-aubel,
                s_docdat  FOR j_1bnfdoc-docdat OBLIGATORY,
                s_pep     FOR vbrp-ps_psp_pnr,
                s_cgc     FOR j_1bnfdoc-cgc,
                s_branch  FOR j_1bnfdoc-branch,
                s_matnr   FOR mara-matnr,
                s_ort01   FOR j_1bnfdoc-ort01,
                s_regio   FOR j_1bnfdoc-regio.
SELECTION-SCREEN END OF BLOCK b0.

************************************************************************
*** Classes                                                          ***
************************************************************************
*----------------------------------------------------------------------*
*       CLASS lcl_relatorio_selecao DEFINITION
*----------------------------------------------------------------------*
*       Seleção
*----------------------------------------------------------------------*
CLASS lcl_relatorio_selecao DEFINITION.                 "#EC CLAS_FINAL

  PUBLIC SECTION.

*   Tipo para os atributos
    TYPES:
      ty_aubel  TYPE RANGE OF vbrp-aubel,
      ty_docdat TYPE RANGE OF j_1bnfdoc-docdat,
      ty_pep    TYPE RANGE OF vbrp-ps_psp_pnr,
      ty_cgc    TYPE RANGE OF j_1bnfdoc-cgc,
      ty_branch TYPE RANGE OF j_1bnfdoc-branch,
      ty_matnr  TYPE RANGE OF j_1bnflin-matnr,
      ty_ort01  TYPE RANGE OF j_1bnfdoc-ort01,
      ty_regio  TYPE RANGE OF j_1bnfdoc-regio.

*   Atributos
    DATA: r_aubel  TYPE ty_aubel,
          r_docdat TYPE ty_docdat,
          r_pep    TYPE ty_pep,
          r_cgc    TYPE ty_cgc,
          r_branch TYPE ty_branch,
          r_matnr  TYPE ty_matnr,
          r_ort01  TYPE ty_ort01,
          r_regio  TYPE ty_regio.

*   Validar classe de mensagem
    METHODS: constructor
                IMPORTING im_aubel  TYPE ty_aubel
                          im_docdat TYPE ty_docdat
                          im_pep    TYPE ty_pep
                          im_cgc    TYPE ty_cgc
                          im_branch TYPE ty_branch
                          im_matnr  TYPE ty_matnr
                          im_ort01  TYPE ty_ort01
                          im_regio  TYPE ty_regio.

ENDCLASS.                    "lcl_relatorio_sel DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_relatorio_selecao IMPLEMENTATION
*----------------------------------------------------------------------*
*       Seleção
*----------------------------------------------------------------------*
CLASS lcl_relatorio_selecao IMPLEMENTATION.

  METHOD constructor.

    me->r_aubel[]  = im_aubel[].
    me->r_docdat[] = im_docdat[].
    me->r_pep[]    = im_pep[].
    me->r_cgc[]    = im_cgc[].
    me->r_branch[] = im_branch[].
    me->r_matnr[]  = im_matnr[].
    me->r_ort01[]  = im_ort01[].
    me->r_regio[]  = im_regio[].

  ENDMETHOD.                    "constructor
ENDCLASS.                    "lcl_relatorio_selecao IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS lcl_relatorio_dados DEFINITION
*----------------------------------------------------------------------*
*       Seleciona dados
*----------------------------------------------------------------------*
CLASS lcl_relatorio_dados DEFINITION.                   "#EC CLAS_FINAL

  PUBLIC SECTION.

*   Tipo para os atributos

*          Partidas individuais da nota fiscal
    TYPES: BEGIN OF ty_lin,
            docnum TYPE j_1bnflin-docnum,     "Nº documento
            itmnum TYPE j_1bnflin-itmnum,     "Nº item do documento
            matnr  TYPE j_1bnflin-matnr,      "Nº do material
            vbeln  TYPE vbrp-vbeln,           "Referência ao documento
            refitm TYPE j_1bnflin-refitm,     "Item de referência
            bwtar  TYPE j_1bnflin-bwtar,      "Tipo de avaliação
            cfop   TYPE j_1bnflin-cfop,       "CFOP
            netwr  TYPE j_1bnflin-netwr,      "Valor líquido
            werks  TYPE j_1bnflin-werks,      "Centro
            itmtyp TYPE j_1bnflin-itmtyp,     "Tipo item nota fiscal
           END OF ty_lin,

*          Documento de faturamento: dados de item
           BEGIN OF ty_vbrp,
            vbeln      TYPE vbrp-vbeln,       "Fatura
            posnr      TYPE vbrp-posnr,       "Item
            aubel      TYPE vbrp-aubel,       "Documento de Vendas
            ps_psp_pnr TYPE vbrp-ps_psp_pnr,  "Elemento PEP
            aupos      TYPE vbrp-aupos,       "Item Documento de Vendas
            arktx      TYPE vbrp-arktx,       "Texto breve
            fkart      TYPE vbrk-fkart,       "Tipo documento
            fkdat      TYPE vbrk-fkdat,       "Data Faturamento
            knumv      TYPE vbrk-knumv,       "Nº Condição
            belnr      TYPE vbrk-belnr,       "Nº Documento Contábil
            gjahr      TYPE vbrk-gjahr,       "Exercício
            zterm      TYPE vbrk-zterm,       "Condição de Pagamento
            bukrs      TYPE vbrk-bukrs,       "Empresa
            kunrg      TYPE vbrk-kunrg,       "Pagador
            fksto      TYPE vbrk-fksto,       "Estorno
* DBR - SR-288897 - Hugo Oliveira - Início
            zlsch      TYPE vbrk-zlsch,        " Forma de Pagamento
            land1      TYPE vbrk-land1,      " Forma Pagamento
*            text2      TYPE t042zt-text2,      " Forma Pagamento
* DBR - SR-288897 - Hugo Oliveira - Fim
           END OF ty_vbrp,

*          Dados de saída do relatório
           BEGIN OF ty_dados,
            vbeln      TYPE vbrk-vbeln,       "Fatura
            posnr      TYPE vbrp-posnr,       "Item
            kbetr      TYPE komv-kbetr,       "Valor Bruto
* Inclusão - Paulo Barrios - Complex - DEVK915301 - 09.04.2015 - Início
            rb00       TYPE konv-kwert,       "Desconto Absoluto
            ibrx       TYPE konv-kwert,       "Base Líquida
* Inclusão - Paulo Barrios - Complex - DEVK915301 - 09.04.2015 - Fim
            kawrt      TYPE konv-kawrt,       "Valor Liquido
            text2      TYPE t042zt-text2,     "Forma Pagamento
            zterm      TYPE vbrk-zterm,       "Condição de Pagamento
            bukrs      TYPE vbrk-bukrs,       "Empresa
            branch     TYPE j_1bnfdoc-branch, "Local de Negócios
            aubel      TYPE vbrp-aubel,       "Documento de Vendas
            ps_psp_pnr TYPE vbrp-ps_psp_pnr,  "Elemento PEP
            aupos      TYPE vbrp-aupos,       "Item Documento de Vendas
            parid_p    TYPE j_1bnfnad-parid,  "Pagador
            name1_p    TYPE j_1bnfnad-name1,  "Nome
            parid_r    TYPE j_1bnfnad-parid,  "Recebedor
            ort01_r    TYPE j_1bnfnad-ort01,  "Nome
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Início
            rlcl_s     TYPE kna1-name1,       "Rec. Local Serviço
            nlcl_s     TYPE kna1-name1,       "Local Serviço
            muni       TYPE kna1-ort01,       "Município
            cnpj       TYPE kna1-stcd1,       "CNPJ do parceiro
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Fim
            fkdat      TYPE vbrk-fkdat,       "Data Faturamento
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Início
            vdata      TYPE vbrk-fkdat,       "Vencimento da fatura
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Fim
            docnum     TYPE j_1bnfdoc-docnum, "Nº documento
            nfenum     TYPE j_1bnfdoc-nfenum, "Nº NF-e
            prefno     TYPE j_1bnfdoc-prefno, "Número NFS-e
            iss        TYPE j_1bnfstx-taxval, "ISS
            inss       TYPE j_1bnfstx-taxval, "INSS
            icsq       TYPE j_1bnfstx-taxval, "IR
            icoq       TYPE j_1bnfstx-taxval, "COFINS Retido
            csll       TYPE j_1bnfstx-taxval, "CSLL Retido
            ipsq       TYPE j_1bnfstx-taxval, "PIS Retido
            issa       TYPE j_1bnfstx-taxval, "ISSA Loc Prestador
            issb       TYPE j_1bnfstx-taxval, "Ret Loc Prestador
            isse       TYPE j_1bnfstx-taxval, "ISSE Loc Execução
            issf       TYPE j_1bnfstx-taxval, "ISSF Ret Loc Execução
            icon       TYPE j_1bnfstx-taxval, "Valor fiscal
            base       TYPE j_1bnfstx-base,   "Valor do item
            ipsn       TYPE j_1bnfstx-taxval, "Valor do PIS
            fksto      TYPE vbrk-fksto,       "Estorno
            duedt      TYPE rfpos-faedt,      "Vencimento Líquido
            fkart      TYPE vbrk-fkart,       "Texto breve
            arktx      TYPE vbrp-arktx,       "Tipo documento
            cgc        TYPE kna1-stcd1,       "CNPJ
            ort01      TYPE j_1bnfdoc-ort01,  "Local
            ort02      TYPE j_1bnfdoc-ort02,  "Bairro
            regio      TYPE j_1bnfdoc-regio,  "Região
* DBR - SR-288897 - Hugo Oliveira - Início
            zlsch      TYPE vbrk-zlsch,        " Forma de Pagamento
            kunrg      TYPE vbrk-kunrg,       " Pagador
* DBR - SR-288897 - Hugo Oliveira - Fim
* DBR - SR-378100 - Eduardo Oliveira - Início
            bstkd      TYPE vbkd-bstkd,
* DBR - SR-378100 - Eduardo Oliveira - Fim
           END OF ty_dados.

*   Atributos
    DATA: o_sel    TYPE REF TO lcl_relatorio_selecao.

*   Tabelas internas
    DATA: tg_dados       TYPE TABLE OF ty_dados,
          tg_doc         TYPE TABLE OF j_1bnfdoc,
          tg_lin         TYPE TABLE OF ty_lin,
*** Início Alteração - Lucas Mascarenhas - 06/03/2015.
          tg_kna1        TYPE TABLE OF kna1,
*** Fim Alteração - Lucas Mascarenhas - 06/03/2015.
          tg_stx         TYPE TABLE OF j_1bnfstx,
          tg_nad         TYPE TABLE OF j_1bnfnad,
          tg_vbrp        TYPE TABLE OF ty_vbrp,
          tg_bseg        TYPE TABLE OF bseg,
          tg_bsid        TYPE TABLE OF bsid,
          tg_konv        TYPE TABLE OF konv,
          tg_t042zt      TYPE TABLE OF t042zt,
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Início
          tg_vbpa        TYPE TABLE OF vbpa,
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Fim
* DBR - SR-378100 - Eduardo Oliveira - Início
          tg_vbfa        TYPE TABLE OF vbfa,
          tg_vbkd        TYPE TABLE OF vbkd.
* DBR - SR-378100 - Eduardo Oliveira - Fim
*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - INÍCIO
    DATA: rg_nfe_cond_pag TYPE RANGE OF tvarvc-low.
*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - FIM

*   Métodos
    METHODS constructor
       IMPORTING io_sel TYPE REF TO lcl_relatorio_selecao.

    METHODS seleciona_dados.

  PRIVATE SECTION.

    METHODS seleciona_j_1bnfdoc.
    METHODS seleciona_j_1bnflin.
    METHODS seleciona_j_1bnfstx.
    METHODS seleciona_j_1bnfnad.
    METHODS seleciona_vbrp.
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Início
    METHODS seleciona_vbpa.
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Fim
* DBR - SR-378100 - Eduardo Oliveira - Início
    METHODS seleciona_vbfa.
    METHODS seleciona_vbkd.
* DBR - SR-378100 - Eduardo Oliveira - Fim
    METHODS seleciona_bseg.
    METHODS seleciona_bsid.
    METHODS seleciona_konv.
    METHODS seleciona_t042zt.
    METHODS trata_dados.

*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - INÍCIO
    METHODS seleciona_tvarv.
*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - FIM

ENDCLASS.                    "lcl_relatorio_dados DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_relatorio_dados IMPLEMENTATION
*----------------------------------------------------------------------*
*       Seleciona dados
*----------------------------------------------------------------------*
CLASS lcl_relatorio_dados IMPLEMENTATION.

* Construtor
  METHOD constructor.
    me->o_sel = io_sel.
  ENDMETHOD.                    "constructor

* Seleciona dados
  METHOD seleciona_dados.

    me->seleciona_j_1bnfdoc( ).
    me->seleciona_j_1bnflin( ).
    me->seleciona_j_1bnfstx( ).
    me->seleciona_j_1bnfnad( ).
    me->seleciona_vbrp( ).
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Início
    me->seleciona_vbpa( ).
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Fim
* DBR - SR-378100 - Eduardo Oliveira - Início
    me->seleciona_vbfa( ).
    me->seleciona_vbkd( ).
* DBR - SR-378100 - Eduardo Oliveira - Fim
    me->seleciona_bseg( ).
    me->seleciona_bsid( ).
    me->seleciona_konv( ).
    me->seleciona_t042zt( ).

*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - INÍCIO
    me->seleciona_tvarv( ).
*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - FIM

    me->trata_dados( ).

  ENDMETHOD.                    "seleciona_dados

* Seleciona dados da tabela J_1BNFDOC - Cabeçalho da nota fiscal
  METHOD seleciona_j_1bnfdoc.

    CONSTANTS c_2 TYPE j_1bnfdoc-direct VALUE '2'.

    REFRESH me->tg_doc.

    SELECT *
      FROM j_1bnfdoc
      INTO TABLE me->tg_doc
     WHERE direct EQ c_2
       AND branch IN me->o_sel->r_branch
       AND ort01  IN me->o_sel->r_ort01
       AND regio  IN me->o_sel->r_regio
       AND cgc    IN me->o_sel->r_cgc
       AND docdat IN me->o_sel->r_docdat.

    IF sy-subrc IS INITIAL.
      SORT me->tg_doc BY docnum ASCENDING.
    ENDIF.

* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Início
*** Início Alteração - Lucas Mascarenhas - 06/03/2015.
*    SELECT kunnr name1
*      FROM kna1
*      INTO TABLE me->tg_kna1
*       FOR ALL ENTRIES IN  me->tg_doc
*     WHERE kunnr EQ me->tg_doc-parid.
*
*    SORT me->tg_kna1 BY kunnr ASCENDING.
*** Fim Alteração - Lucas Mascarenhas - 06/03/2015.
    SELECT *
      FROM kna1
      INTO TABLE me->tg_kna1
       FOR ALL ENTRIES IN  me->tg_doc
     WHERE kunnr EQ me->tg_doc-parid.

    IF sy-subrc IS INITIAL.
      SORT me->tg_kna1 BY kunnr ASCENDING.
    ENDIF.

    SELECT *
      FROM kna1
 APPENDING TABLE me->tg_kna1
       FOR ALL ENTRIES IN me->tg_vbpa
     WHERE kunnr EQ me->tg_vbpa-kunnr.

    IF sy-subrc IS INITIAL.
      SORT me->tg_kna1 BY kunnr ASCENDING.
      DELETE ADJACENT DUPLICATES FROM me->tg_kna1 COMPARING kunnr.
    ENDIF.
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Fim

  ENDMETHOD.                    "seleciona_j_1bnfdoc

* Seleciona dados da tabela J_1BNFLIN - Partidas individuais da nota fiscal
  METHOD seleciona_j_1bnflin.

    CHECK NOT me->tg_doc IS INITIAL.

    REFRESH me->tg_lin.

    SELECT docnum itmnum matnr refkey AS vbeln
           refitm bwtar cfop netwr werks itmtyp
      FROM j_1bnflin
      INTO TABLE me->tg_lin
       FOR ALL ENTRIES IN  me->tg_doc
     WHERE docnum EQ me->tg_doc-docnum
       AND matnr  IN me->o_sel->r_matnr.

    IF sy-subrc IS INITIAL.
      SORT me->tg_lin BY docnum ASCENDING itmnum ASCENDING.
    ENDIF.
  ENDMETHOD.                    "seleciona_j_1bnflin

* Seleciona dados da tabela J_1BNFSTX - Nota fiscal: imposto por item
  METHOD seleciona_j_1bnfstx.

    CHECK NOT me->tg_lin IS INITIAL.

    REFRESH me->tg_stx.

    SELECT *
      FROM j_1bnfstx
      INTO TABLE me->tg_stx
       FOR ALL ENTRIES IN  me->tg_lin
     WHERE docnum   EQ  me->tg_lin-docnum
       AND itmnum   EQ  me->tg_lin-itmnum
       AND ( taxtyp EQ 'ISS3' OR taxtyp EQ 'ICSQ' OR
             taxtyp EQ 'IPSQ' OR taxtyp EQ 'ICOQ' OR
             taxtyp EQ 'ISSA' OR taxtyp EQ 'ISSB' OR
             taxtyp EQ 'ISSE' OR taxtyp EQ 'ISSF' OR
             taxtyp EQ 'ICON' OR taxtyp EQ 'IPSN' ).

    IF sy-subrc IS INITIAL.
      SORT me->tg_stx BY docnum ASCENDING
                         itmnum ASCENDING
                         taxtyp ASCENDING.
    ENDIF.

  ENDMETHOD.                    "seleciona_j_1bnfstx

  METHOD seleciona_j_1bnfnad.

    CHECK NOT me->tg_doc IS INITIAL.

    REFRESH me->tg_nad.

    SELECT *
      FROM j_1bnfnad
      INTO TABLE me->tg_nad
       FOR ALL ENTRIES IN  me->tg_doc
     WHERE docnum EQ me->tg_doc-docnum
       AND partyp EQ 'C'.

    IF sy-subrc IS INITIAL.
      SORT me->tg_nad BY docnum ASCENDING parvw ASCENDING.
    ENDIF.

  ENDMETHOD.                    "seleciona_j_1bnfnad

* Seleciona dados da tabela VBRP - Dados de cabeçalho e de item
  METHOD seleciona_vbrp.

    CHECK NOT tg_lin IS INITIAL.

    REFRESH me->tg_vbrp.

    SELECT i~vbeln i~posnr i~aubel
           i~ps_psp_pnr i~aupos i~arktx
           c~fkart c~fkdat c~knumv
           c~belnr c~gjahr c~zterm
           c~bukrs c~kunrg c~fksto
* DBR - SR-288897 - Hugo Oliveira - Início
           c~zlsch c~land1"t042zt~text2
* DBR - SR-288897 - Hugo Oliveira - Fim
      FROM vbrp AS i
     INNER JOIN vbrk AS c
        ON i~vbeln = c~vbeln
* DBR - SR-288897 - Hugo Oliveira - Início
***     INNER JOIN t042zt
***        ON t042zt~zlsch = c~zlsch AND
***           t042zt~land1 = c~land1
* DBR - SR-288897 - Hugo Oliveira - Fim
      INTO TABLE me->tg_vbrp
       FOR ALL ENTRIES  IN me->tg_lin
     WHERE i~vbeln      EQ me->tg_lin-vbeln
       AND i~posnr      EQ me->tg_lin-refitm
       AND i~ps_psp_pnr IN me->o_sel->r_pep
       AND i~aubel      IN me->o_sel->r_aubel.
* DBR - SR-288897 - Hugo Oliveira - Início
*       AND t042zt~spras = sy-langu.
* DBR - SR-288897 - Hugo Oliveira - Fim

    IF sy-subrc IS INITIAL.
      SORT tg_vbrp BY vbeln ASCENDING posnr ASCENDING.
    ENDIF.

  ENDMETHOD.                    "seleciona_vbrp
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Início

* Seleciona dados da tabela VBPA - Documento SD: parceiro
  METHOD seleciona_vbpa.

    CHECK NOT me->tg_vbrp IS INITIAL.

    REFRESH me->tg_vbpa.

    SELECT *
      FROM vbpa
      INTO TABLE me->tg_vbpa
       FOR ALL ENTRIES IN me->tg_vbrp
     WHERE vbeln EQ me->tg_vbrp-vbeln.

    IF sy-subrc IS INITIAL.
      SORT me->tg_vbpa BY vbeln ASCENDING parvw ASCENDING.
    ENDIF.

  ENDMETHOD.                    "seleciona_vbpa
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Fim

* DBR - SR-378100 - Eduardo Oliveira - Início
* Seleciona dados da tabela VBFA - Fluxo de documentos de vendas e distribuição
  METHOD seleciona_vbfa.

    CHECK NOT me->tg_vbrp IS INITIAL.

    REFRESH me->tg_vbfa.

    SELECT *
      FROM vbfa
      INTO TABLE me->tg_vbfa
       FOR ALL ENTRIES IN me->tg_vbrp
     WHERE vbeln EQ me->tg_vbrp-vbeln
       AND posnn EQ me->tg_vbrp-posnr
       AND vbtyp_n IN ( SELECT low FROM tvarvc WHERE name EQ 'ZSD_NFE_VBTYP_N' )
       AND vbtyp_v IN ( SELECT low FROM tvarvc WHERE name EQ 'ZSD_NFE_VBTYP_V' ).

    IF sy-subrc IS INITIAL.
      SORT me->tg_vbfa BY vbeln posnn.
    ENDIF.

  ENDMETHOD.                    "seleciona_vbfa
* Seleciona dados da tabela VBKD - Documento de vendas: dados comerciais
  METHOD seleciona_vbkd.

    CHECK NOT me->tg_vbfa IS INITIAL.

    REFRESH me->tg_vbkd.

    SELECT *
      FROM vbkd
      INTO TABLE me->tg_vbkd
       FOR ALL ENTRIES IN me->tg_vbfa
     WHERE vbeln EQ me->tg_vbfa-vbelv
       AND posnr EQ me->tg_vbfa-posnv.

    IF sy-subrc IS INITIAL.
      SORT me->tg_vbkd BY vbeln posnr.
    ENDIF.

  ENDMETHOD.                    "seleciona_vbkd
* DBR - SR-378100 - Eduardo Oliveira - Fim

* Seleciona dados da tabela BSEG - Contabilidade financeira
  METHOD seleciona_bseg.

    CHECK NOT me->tg_vbrp IS INITIAL.

    REFRESH me->tg_bseg.

    SELECT *
      FROM bseg
      INTO TABLE me->tg_bseg
       FOR ALL ENTRIES IN me->tg_vbrp
     WHERE bukrs EQ me->tg_vbrp-bukrs
       AND belnr EQ me->tg_vbrp-vbeln.

    IF sy-subrc IS INITIAL.
      SORT me->tg_bseg BY bukrs ASCENDING belnr ASCENDING
                          gjahr ASCENDING qsskz ASCENDING.
    ENDIF.

  ENDMETHOD.                    "seleciona_bseg

* Seleciona dados da tabela BSID - Índice secundário para clientes
  METHOD seleciona_bsid.

    CHECK NOT me->tg_vbrp IS INITIAL.

    REFRESH me->tg_bsid.

    SELECT *
      FROM bsid
      INTO TABLE me->tg_bsid
       FOR ALL ENTRIES IN me->tg_vbrp
     WHERE bukrs EQ me->tg_vbrp-bukrs
       AND gjahr EQ me->tg_vbrp-gjahr
       AND vbeln EQ me->tg_vbrp-vbeln.

    IF sy-subrc IS INITIAL.
      SORT me->tg_bsid BY gjahr ASCENDING vbeln ASCENDING.
    ENDIF.

  ENDMETHOD.                    "seleciona_bsid

* Seleciona dados da tabela KONV - Condições (dados de operação)
  METHOD seleciona_konv.

    CHECK NOT me->tg_vbrp IS INITIAL.

    REFRESH me->tg_konv.

    SELECT *
      FROM konv
      INTO TABLE me->tg_konv
       FOR ALL ENTRIES IN me->tg_vbrp
     WHERE knumv EQ me->tg_vbrp-knumv
       AND kposn EQ me->tg_vbrp-posnr
       AND ( kschl EQ 'ZPB3' OR kschl EQ 'ZTCO' OR
             kschl EQ 'BX6D' OR kschl EQ 'BX82' OR
* Inclusão - Paulo Barrios - Complex - DEVK915301 - 09.04.2015 - Início
             kschl EQ 'RB00' OR kschl EQ 'IBRX' ).
* Inclusão - Paulo Barrios - Complex - DEVK915301 - 09.04.2015 - Fim

    IF sy-subrc IS INITIAL.
      SORT me->tg_konv BY knumv ASCENDING
                          kposn ASCENDING
                          kschl ASCENDING.
    ENDIF.

  ENDMETHOD.                    "seleciona_konv

* Seleciona dados da tabela T042ZT - Textos
  METHOD seleciona_t042zt.

*    CHECK NOT me->tg_bsid IS INITIAL.
    CHECK NOT me->tg_vbrp IS INITIAL.

    REFRESH me->tg_t042zt.

    SELECT *
      FROM t042zt
      INTO TABLE me->tg_t042zt
*       FOR ALL ENTRIES IN me->tg_bsid
       FOR ALL ENTRIES IN me->tg_vbrp
     WHERE spras EQ sy-langu
*       AND land1 EQ 'BR'
       AND land1 EQ me->tg_vbrp-land1
       AND zlsch EQ me->tg_vbrp-zlsch.

    IF sy-subrc IS INITIAL.
      SORT me->tg_t042zt BY zlsch land1 ASCENDING.
    ENDIF.

  ENDMETHOD.                    "seleciona_t042zt

*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - INÍCIO
  METHOD seleciona_tvarv.

    SELECT sign opti low high
      FROM tvarvc
      INTO TABLE me->rg_nfe_cond_pag
      WHERE name = 'ZSD_NFE_COND_PAG'.
    IF sy-subrc NE 0.
      CLEAR me->rg_nfe_cond_pag.
    ENDIF.

  ENDMETHOD.
*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - FIM

* Trata dados
  METHOD trata_dados.

    FIELD-SYMBOLS: <fs_doc>         TYPE j_1bnfdoc,
                   <fs_lin>         TYPE ty_lin,
*** Início Alteração - Lucas Mascarenhas - 06/03/2015.
                   <fs_kna1>        TYPE kna1,
*** Fim Alteração - Lucas Mascarenhas - 06/03/2015.
                   <fs_stx>         TYPE j_1bnfstx,
                   <fs_nad>         TYPE j_1bnfnad,
                   <fs_vbrp>        TYPE ty_vbrp,
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Início
                   <fs_vbpa>        TYPE vbpa,
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Fim
                   <fs_bseg>        TYPE bseg,
                   <fs_bsid>        TYPE bsid,
                   <fs_konv>        TYPE konv,
                   <fs_t042zt>      TYPE t042zt,
                   <fs_valor>       TYPE any.

* DBR - SR-378100 - Eduardo Oliveira - Início
    DATA: ls_vbfa TYPE vbfa,
          ls_vbkd TYPE vbkd.
* DBR - SR-378100 - Eduardo Oliveira - Fim

    DATA e_dados LIKE LINE OF me->tg_dados.

    LOOP AT me->tg_lin ASSIGNING <fs_lin>.

*     Item
      MOVE-CORRESPONDING <fs_lin> TO e_dados.               "#EC ENHOK

*     Cabeçalho
      READ TABLE me->tg_doc
                 ASSIGNING <fs_doc>
                           WITH KEY docnum = <fs_lin>-docnum
                                    BINARY SEARCH.

      IF sy-subrc IS INITIAL AND <fs_doc> IS ASSIGNED.

        MOVE-CORRESPONDING <fs_doc> TO e_dados.             "#EC ENHOK

*** Início Alteração - Lucas Mascarenhas - 06/03/2015.
*        READ TABLE me->tg_nad
*                   ASSIGNING <fs_nad>
*                             WITH KEY docnum = <fs_doc>-docnum
*                                      parvw  = 'RG'
*                                      BINARY SEARCH.

*        IF sy-subrc IS INITIAL AND <fs_nad> IS ASSIGNED.
*          e_dados-parid_p = <fs_nad>-parid.
*          e_dados-name1_p = <fs_nad>-name1.
*        ENDIF.

        IF sy-subrc IS INITIAL AND <fs_doc> IS ASSIGNED.
          READ TABLE me->tg_kna1
                     ASSIGNING <fs_kna1>
                               WITH KEY kunnr = <fs_doc>-parid
                                        BINARY SEARCH.

          IF sy-subrc IS INITIAL  AND
            <fs_doc>  IS ASSIGNED AND
            <fs_kna1> IS ASSIGNED.
            e_dados-parid_p = <fs_doc>-parid.
            e_dados-name1_p = <fs_kna1>-name1.
          ENDIF.
        ENDIF.
*** Fim Alteração - Lucas Mascarenhas - 06/03/2015.

        READ TABLE me->tg_nad
                   ASSIGNING <fs_nad>
                             WITH KEY docnum = <fs_doc>-docnum
                                      parvw  = 'WE'
                                      BINARY SEARCH.

        IF sy-subrc IS INITIAL AND <fs_nad> IS ASSIGNED.
          e_dados-parid_r = <fs_nad>-parid.
          e_dados-ort01_r = <fs_nad>-ort01.
        ENDIF.

      ELSE.
        CONTINUE.
      ENDIF.

*     Fatura
      UNASSIGN <fs_vbrp>.
      READ TABLE me->tg_vbrp
                 ASSIGNING <fs_vbrp>
                           WITH KEY vbeln = <fs_lin>-vbeln
                                    posnr = <fs_lin>-refitm
                                    BINARY SEARCH.

      IF sy-subrc IS INITIAL AND <fs_vbrp> IS ASSIGNED.

        MOVE-CORRESPONDING <fs_vbrp> TO e_dados.            "#EC ENHOK

        READ TABLE me->tg_t042zt
                             ASSIGNING <fs_t042zt>
                                       WITH KEY zlsch = <fs_vbrp>-zlsch
                                                land1 = <fs_vbrp>-land1
                                                BINARY SEARCH.

        IF sy-subrc IS INITIAL.
          MOVE-CORRESPONDING <fs_t042zt> TO e_dados.        "#EC ENHOK
        ENDIF.

        READ TABLE me->tg_bsid
                   ASSIGNING <fs_bsid>
                             WITH KEY bukrs = <fs_vbrp>-bukrs
                                      gjahr = <fs_vbrp>-fkdat(4)
                                      vbeln = <fs_vbrp>-vbeln
                                      BINARY SEARCH.

        IF sy-subrc IS INITIAL AND <fs_bsid> IS ASSIGNED.

          CALL FUNCTION 'NET_DUE_DATE_GET'
            EXPORTING
              i_zfbdt = <fs_bsid>-zfbdt
              i_zbd1t = <fs_bsid>-zbd1t
              i_zbd2t = <fs_bsid>-zbd2t
              i_zbd3t = <fs_bsid>-zbd3t
              i_shkzg = <fs_bsid>-shkzg
              i_rebzg = <fs_bsid>-rebzg
            IMPORTING
              e_faedt = e_dados-duedt.

**          READ TABLE me->tg_t042zt
**                     ASSIGNING <fs_t042zt>
**                               WITH KEY zlsch = <fs_bsid>-zlsch
**                                        BINARY SEARCH.
**
**          IF sy-subrc IS INITIAL.
**            MOVE-CORRESPONDING <fs_t042zt> TO e_dados.      "#EC ENHOK
**          ENDIF.
        ENDIF.

        READ TABLE me->tg_bseg
                   ASSIGNING <fs_bseg>
                             WITH KEY bukrs = <fs_vbrp>-bukrs
                                      belnr = <fs_vbrp>-vbeln
                                      gjahr = <fs_vbrp>-fkdat(4)
                                      qsskz = 'IN'
                                      BINARY SEARCH.

        IF sy-subrc IS INITIAL AND <fs_bseg> IS ASSIGNED.
          e_dados-inss = <fs_bseg>-wrbtr.
        ENDIF.

        READ TABLE me->tg_konv
                   ASSIGNING <fs_konv>
                             WITH KEY knumv = <fs_vbrp>-knumv
                                      kposn = <fs_vbrp>-posnr
                                      kschl = 'ZPB3'
                                      BINARY SEARCH.

        IF sy-subrc IS INITIAL.
          e_dados-kbetr = <fs_konv>-kbetr.
        ENDIF.

* Inclusão - Paulo Barrios - Complex - DEVK915301 - 09.04.2015 - Início
        READ TABLE me->tg_konv
                   ASSIGNING <fs_konv>
                             WITH KEY knumv = <fs_vbrp>-knumv
                                      kposn = <fs_vbrp>-posnr
                                      kschl = 'RB00'
                                      BINARY SEARCH.

        IF sy-subrc IS INITIAL.
          e_dados-rb00 = <fs_konv>-kwert.
        ENDIF.

        READ TABLE me->tg_konv
                   ASSIGNING <fs_konv>
                             WITH KEY knumv = <fs_vbrp>-knumv
                                      kposn = <fs_vbrp>-posnr
                                      kschl = 'IBRX'
                                      BINARY SEARCH.

        IF sy-subrc IS INITIAL.
          e_dados-ibrx = <fs_konv>-kwert.
        ENDIF.
* Inclusão - Paulo Barrios - Complex - DEVK915301 - 09.04.2015 - Fim

        READ TABLE me->tg_konv
                   ASSIGNING <fs_konv>
                             WITH KEY knumv = <fs_vbrp>-knumv
                                      kposn = <fs_vbrp>-posnr
                                      kschl = 'ZTCO'
                                      BINARY SEARCH.
        IF sy-subrc IS INITIAL.
          e_dados-kawrt = <fs_konv>-kawrt.
        ENDIF.
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Início
        READ TABLE me->tg_vbpa
                   ASSIGNING <fs_vbpa>
                              WITH KEY vbeln = <fs_vbrp>-vbeln
                                       parvw = 'ZA'
                                       BINARY SEARCH.
        IF sy-subrc IS INITIAL.

          UNASSIGN <fs_kna1>.
          READ TABLE me->tg_kna1
                     ASSIGNING <fs_kna1>
                                WITH KEY kunnr = <fs_vbpa>-kunnr
                                         BINARY SEARCH.
          IF sy-subrc IS INITIAL.
            e_dados-rlcl_s = <fs_kna1>-kunnr.
            e_dados-nlcl_s = <fs_kna1>-name1.
            e_dados-muni   = <fs_kna1>-ort01.
            e_dados-cnpj   = <fs_kna1>-stcd1.
          ENDIF.
        ENDIF.

* DBR - SR-378100 - Eduardo Oliveira - Início
        READ TABLE me->tg_vbfa INTO ls_vbfa
        WITH KEY vbeln = <fs_vbrp>-vbeln
                 posnn = <fs_vbrp>-posnr
        BINARY SEARCH.
        IF sy-subrc IS INITIAL.

          READ TABLE me->tg_vbkd INTO ls_vbkd
          WITH KEY vbeln = ls_vbfa-vbelv
                   posnr = ls_vbfa-posnv
          BINARY SEARCH.
          IF sy-subrc IS INITIAL.
            e_dados-bstkd = ls_vbkd-bstkd.
          ENDIF.

        ENDIF.
* DBR - SR-378100 - Eduardo Oliveira - Fim

        UNASSIGN <fs_bseg>.
        READ TABLE me->tg_bseg
              ASSIGNING <fs_bseg>
                        WITH KEY bukrs = <fs_vbrp>-bukrs
                                 belnr = <fs_vbrp>-vbeln
                                 gjahr = <fs_vbrp>-fkdat(4)
                                 bschl = '01'.

        IF sy-subrc IS INITIAL AND <fs_bseg> IS ASSIGNED.

*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - INÍCIO
          IF <fs_bseg>-zterm NOT IN rg_nfe_cond_pag.
*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - FIM

            CALL FUNCTION 'NET_DUE_DATE_GET'
              EXPORTING
                i_zfbdt = <fs_bseg>-zfbdt
                i_zbd1t = <fs_bseg>-zbd1t
                i_zbd2t = <fs_bseg>-zbd2t
                i_zbd3t = <fs_bseg>-zbd3t
                i_shkzg = <fs_bseg>-shkzg
                i_rebzg = <fs_bseg>-rebzg
              IMPORTING
                e_faedt = e_dados-vdata.

*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - INÍCIO
          ELSE.
            e_dados-vdata = <fs_bseg>-zfbdt.
          ENDIF.
*** DBR - DBR-SD- Ajustes NF - Data de Vencimento - ECSO - 18.05.2021 - FIM

        ENDIF.
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Fim
      ELSE.
        CONTINUE.
      ENDIF.

*     Impostos
      UNASSIGN <fs_stx>.
      READ TABLE me->tg_stx
                 WITH KEY docnum = <fs_lin>-docnum
                          itmnum = <fs_lin>-itmnum
                          TRANSPORTING NO FIELDS
                          BINARY SEARCH.

      IF sy-subrc IS INITIAL.

        LOOP AT me->tg_stx ASSIGNING <fs_stx> FROM sy-tabix.

          IF <fs_stx>-docnum = <fs_lin>-docnum AND
             <fs_stx>-itmnum = <fs_lin>-itmnum.

            UNASSIGN <fs_valor>.
            ASSIGN COMPONENT <fs_stx>-taxtyp OF STRUCTURE e_dados TO <fs_valor>.

            IF <fs_valor> IS ASSIGNED.
              <fs_valor> = <fs_stx>-taxval.
            ENDIF.

            CASE <fs_stx>-taxtyp.
              WHEN 'ICON'.
                e_dados-base = <fs_stx>-base.   "Valor do item
              WHEN 'ISSF'.
                e_dados-iss  = <fs_stx>-taxval. "ISS Retido
              WHEN 'ICSQ'.
                e_dados-csll = <fs_stx>-taxval. "CSLL Retido
            ENDCASE.

          ELSE.
            EXIT.
          ENDIF.
        ENDLOOP.
      ENDIF.

      APPEND e_dados TO me->tg_dados.
      CLEAR e_dados.

    ENDLOOP.

  ENDMETHOD.                    "trata_dados

ENDCLASS.                    "lcl_relatorio_dados IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS lcl_relatorio_dados IMPLEMENTATION
*----------------------------------------------------------------------*
*       Exibe relatório
*----------------------------------------------------------------------*
CLASS lcl_relatorio_exibe DEFINITION.                   "#EC CLAS_FINAL

  PUBLIC SECTION.

*   Atributos
    DATA: o_dados   TYPE REF TO lcl_relatorio_dados,
          o_alv     TYPE REF TO cl_salv_table,
          o_funcoes TYPE REF TO cl_salv_functions_list,
          o_colunas TYPE REF TO cl_salv_columns_table,
          o_coluna  TYPE REF TO cl_salv_column.

*   Métodos
    METHODS constructor
       IMPORTING io_dados TYPE REF TO lcl_relatorio_dados.

    METHODS exibe_dados.

ENDCLASS.                    "lcl_relatorio_exibe DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_relatorio_exibe IMPLEMENTATION
*----------------------------------------------------------------------*
*       Exibe relatório
*----------------------------------------------------------------------*
CLASS lcl_relatorio_exibe IMPLEMENTATION.

* Construtor
  METHOD constructor.
    me->o_dados = io_dados.
  ENDMETHOD.                    "constructor

* Exibe dados
  METHOD exibe_dados.

    TRY.
        CALL METHOD cl_salv_table=>factory
          IMPORTING
            r_salv_table = o_alv
          CHANGING
            t_table      = me->o_dados->tg_dados.
      CATCH cx_salv_msg .                               "#EC NO_HANDLER
    ENDTRY.

    o_funcoes = me->o_alv->get_functions( ).
    o_funcoes->set_all( ).

    o_colunas = me->o_alv->get_columns( ).
    o_colunas->set_optimize( abap_false ).

    TRY.

        o_coluna = o_colunas->get_column( text-c00 ).
        o_coluna->set_short_text( text-c01 ).
        o_coluna->set_medium_text( text-c01 ).
        o_coluna->set_long_text( text-c01 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c02 ).
        o_coluna->set_short_text( text-c03 ).
        o_coluna->set_medium_text( text-c03 ).
        o_coluna->set_long_text( text-c03 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c04 ).
        o_coluna->set_short_text( text-c05 ).
        o_coluna->set_medium_text( text-c06 ).
        o_coluna->set_long_text( text-c06 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c08 ).
        o_coluna->set_short_text( text-c08 ).
        o_coluna->set_medium_text( text-c09 ).
        o_coluna->set_long_text( text-c09 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c10 ).
        o_coluna->set_short_text( text-c11 ).
        o_coluna->set_medium_text( text-c11 ).
        o_coluna->set_long_text( text-c11 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c12 ).
        o_coluna->set_short_text( text-c13 ).
        o_coluna->set_medium_text( text-c14 ).
        o_coluna->set_long_text( text-c14 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c15 ).
        o_coluna->set_short_text( text-c16 ).
        o_coluna->set_medium_text( text-c17 ).
        o_coluna->set_long_text( text-c17 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c18 ).
        o_coluna->set_short_text( text-c19 ).
        o_coluna->set_medium_text( text-c20 ).
        o_coluna->set_long_text( text-c38 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c21 ).
        o_coluna->set_short_text( text-c22 ).
        o_coluna->set_medium_text( text-c22 ).
        o_coluna->set_long_text( text-c22 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c23 ).
        o_coluna->set_short_text( text-c23 ).
        o_coluna->set_medium_text( text-c39 ).
        o_coluna->set_long_text( text-c40 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c24 ).
        o_coluna->set_short_text( text-c41 ).
        o_coluna->set_medium_text( text-c41 ).
        o_coluna->set_long_text( text-c41 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c25 ).
        o_coluna->set_short_text( text-c26 ).
        o_coluna->set_medium_text( text-c27 ).
        o_coluna->set_long_text( text-c27 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c28 ).
        o_coluna->set_short_text( text-c29 ).
        o_coluna->set_medium_text( text-c30 ).
        o_coluna->set_long_text( text-c30 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c31 ).
        o_coluna->set_short_text( text-c32 ).
        o_coluna->set_medium_text( text-c33 ).
        o_coluna->set_long_text( text-c33 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c34 ).
        o_coluna->set_short_text( text-c35 ).
        o_coluna->set_medium_text( text-c35 ).
        o_coluna->set_long_text( text-c35 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c36 ).
        o_coluna->set_short_text( text-c37 ).
        o_coluna->set_medium_text( text-c37 ).
        o_coluna->set_long_text( text-c37 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c42 ).
*** Início Alteração - Lucas Mascarenhas - 06/03/2015.
*        o_coluna->set_short_text( text-c43 ).
*        o_coluna->set_medium_text( text-c43 ).
*        o_coluna->set_long_text( text-c43 ).
        o_coluna->set_short_text( text-c50 ).
        o_coluna->set_medium_text( text-c51 ).
        o_coluna->set_long_text( text-c52 ).
*** Fim Alteração - Lucas Mascarenhas - 06/03/2015.
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c44 ).
        o_coluna->set_short_text( text-c45 ).
        o_coluna->set_medium_text( text-c45 ).
        o_coluna->set_long_text( text-c45 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c46 ).
        o_coluna->set_short_text( text-c47 ).
        o_coluna->set_medium_text( text-c47 ).
        o_coluna->set_long_text( text-c47 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c48 ).
        o_coluna->set_short_text( text-c49 ).
        o_coluna->set_medium_text( text-c49 ).
        o_coluna->set_long_text( text-c49 ).
        CLEAR o_coluna.

* Inclusão - Paulo Barrios - Complex - DEVK915301 - 09.04.2015 - Início
        o_coluna = o_colunas->get_column( text-c53 ).
        o_coluna->set_short_text( text-c54 ).
        o_coluna->set_medium_text( text-c55 ).
        o_coluna->set_long_text( text-c55 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c56 ).
        o_coluna->set_short_text( text-c57 ).
        o_coluna->set_medium_text( text-c58 ).
        o_coluna->set_long_text( text-c58 ).
        CLEAR o_coluna.
* Inclusão - Paulo Barrios - Complex - DEVK915301 - 09.04.2015 - Fim

* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Início
        o_coluna = o_colunas->get_column( text-c59 ).
        o_coluna->set_short_text( text-c60 ).
        o_coluna->set_medium_text( text-c61 ).
        o_coluna->set_long_text( text-c61 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c62 ).
        o_coluna->set_short_text( text-c63 ).
        o_coluna->set_medium_text( text-c64 ).
        o_coluna->set_long_text( text-c65 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c66 ).
        o_coluna->set_short_text( text-c66 ).
        o_coluna->set_medium_text( text-c49 ).
        o_coluna->set_long_text( text-c49 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c67 ).
        o_coluna->set_short_text( text-c67 ).
        o_coluna->set_medium_text( text-c67 ).
        o_coluna->set_long_text( text-c72 ).
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c68 ).
        o_coluna->set_short_text( text-c69 ).
        o_coluna->set_medium_text( text-c70 ).
        o_coluna->set_long_text( text-c71 ).
        CLEAR o_coluna.
* Inclusão - Rodrigo Siqueira - Complex - DEVK915836 - 29.07.2015 - Fim
* DBR - SR-288897 - Hugo Oliveira - Início

        o_coluna = o_colunas->get_column( text-c75 ). " ZLSCH
        o_coluna->set_short_text( text-c77 ).         " FrmPgto
        o_coluna->set_medium_text( text-c76 ).        " Forma de Pagamento
        o_coluna->set_long_text( text-c76 ).          " Forma de Pagamento
        CLEAR o_coluna.

        o_coluna = o_colunas->get_column( text-c73 ). " KUNRG
        o_coluna->set_short_text( text-c74 ).         " Pagador
        o_coluna->set_medium_text( text-c74 ).        " Pagador
        o_coluna->set_long_text( text-c74 ).          " Pagador
        CLEAR o_coluna.
* DBR - SR-288897 - Hugo Oliveira - Fim

* DBR - SR-378100 - Eduardo Oliveira - Início
        o_coluna = o_colunas->get_column( text-c78 ). " BSTKD
        o_coluna->set_short_text( text-c79 ).         " Nr. Pedido
        o_coluna->set_medium_text( text-c80 ).        " Nr. Pedido do Cliente
        o_coluna->set_long_text( text-c81 ).          " Número do Pedido do Cliente
        CLEAR o_coluna.
* DBR - SR-378100 - Eduardo Oliveira - Fim

      CATCH cx_salv_not_found.                          "#EC NO_HANDLER
    ENDTRY.

*   Exibe o ALV
    me->o_alv->display( ).

  ENDMETHOD.                    "exibe_dados

ENDCLASS.                    "lcl_relatorio_exibe IMPLEMENTATION

************************************************************************
*** Objetos                                                          ***
************************************************************************
DATA: o_selecao TYPE REF TO lcl_relatorio_selecao,          "#EC NEEDED
      o_dados   TYPE REF TO lcl_relatorio_dados,            "#EC NEEDED
      o_exibe   TYPE REF TO lcl_relatorio_exibe.            "#EC NEEDED

************************************************************************
*** Início do Processamento                                          ***
************************************************************************
START-OF-SELECTION.

  CREATE OBJECT o_selecao
    EXPORTING
      im_aubel  = s_aubel[]
      im_docdat = s_docdat[]
      im_pep    = s_pep[]
      im_cgc    = s_cgc[]
      im_branch = s_branch[]
      im_matnr  = s_matnr[]
      im_ort01  = s_ort01[]
      im_regio  = s_regio[].

  CREATE OBJECT o_dados
    EXPORTING
      io_sel = o_selecao.

  CREATE OBJECT o_exibe
    EXPORTING
      io_dados = o_dados.

  o_dados->seleciona_dados( ). "Seleciona dados

  IF NOT o_dados->tg_dados IS INITIAL.
    o_exibe->exibe_dados( ).   "Exibe dados
  ELSE.
    MESSAGE e899(sd) WITH text-e00.
  ENDIF.

************************************************************************
*** Fim do Processamento                                             ***
************************************************************************
END-OF-SELECTION.